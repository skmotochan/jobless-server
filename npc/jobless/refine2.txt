//===== rAthena Script =======================================
//= Advanced Refiner
//===== Description: =========================================
//= [Official Conversion]
//= Refiner that uses Enriched ores to increase upgrade success.
//= - Dialog is only partly official to iRO.
//= - Uses the iRO position for this NPC.
//===== Changelog: ===========================================
//= 1.0 First Version. [L0ne_W0lf]
//= 1.1 Fixed a weird carriage return. o_o [L0ne_W0lf]
//= 1.2 Optimizing refine method [Zephyrus]
//= 1.3 Typo fixes [Yommy]
//= 1.4 Removed unnecessary dialogs [Zephyrus]
//= 1.4a Added 'disable_items' command. [Euphy]
//= 1.4b Fixed coordinates. [Euphy]
//= 1.5 Some official script updates. [Euphy]
//= 1.6 Added VIP features. [Euphy]
//= 1.7 Removed re-roll behavior. [Secret]
//============================================================

pa2_in01,81,32,5	script	Enriched Refiner#payo2	826,{
	disable_items;
	mes "[Suhnbi]";
	mes "I am the Armsmith";
	mes "I can refine all kinds of weapons,";
	mes "armor and equipment, so let me";
	mes "know what you want to refine.";
	next;

	setarray .@indices[1], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_L, EQI_HAND_R, EQI_GARMENT, EQI_SHOES, EQI_ACC_L, EQI_ACC_R, EQI_HEAD_MID, EQI_HEAD_LOW;
	for(set .@i,1; .@i<=10; set .@i,.@i+1) {
		if (getequipisequiped(.@indices[.@i])) {
			set .@menu$, .@menu$ + F_getpositionname(.@indices[.@i]) + "-[" + getequipname(.@indices[.@i]) + "]";
			set .@equipped,1;
		}
		set .@menu$, .@menu$ + ":";
	}
	if (.@equipped == 0) {
		mes "[Suhnbi]";
		mes "I don't think I can refine any items you have...";
		close;
	}
	set .@part, .@indices[ select(.@menu$) ];

	if (!getequipisequiped(.@part)) //custom check
		close;
	if (!getequipisenableref(.@part)) {
		mes "[Suhnbi]";
		mes "Go find another Blacksmith. You can't refine this thing.";
		close;
	}
	if (getequiprefinerycnt(.@part) >= 10) {
		mes "[Suhnbi]";
		mes "Hmm... someone perfected this already. I don't think I can work on it further.";
		close;
	}

	.@refineitemid = getequipid(.@part); // save id of the item
	.@refinerycnt = getequiprefinerycnt(.@part); //save refinery count
	.@price = getequiprefinecost(.@part, REFINE_COST_ENRICHED, REFINE_ZENY_COST);
	.@material = getequiprefinecost(.@part, REFINE_COST_ENRICHED, REFINE_MATERIAL_ID);

	// Make sure you have the necessary items and Zeny to refine your items
	// Determines chance of failure and verifies that you want to continue.
	callsub S_RefineValidate,getequipweaponlv(.@part),.@material,.@price,.@part,.@refineitemid,.@refinerycnt;

	mes "[Suhnbi]";
	mes "Clang! Clang! Clang!";
	if (getequippercentrefinery(.@part, true) > rand(100)) {
		successrefitem .@part;
		next;
		emotion ET_BEST;
		mes "[Suhnbi]";
		mes "There you go! It's done.";
		mes "It's been a while since I've made such a fine "+((getequipweaponlv(.@part))?"weapon":"armor")+". You must be happy because it has become stronger!";
		close;
	}
	failedrefitem .@part;
	next;
	emotion (!rand(5))?ET_MONEY:ET_HUK;
	mes "[Suhnbi]";
	mes "Uuuuuuuuuummmmmph!!!";
	next;
	mes "[Suhnbi]";
	mes "...";
	mes ".....";
	mes ".......Huhuhuhuhu~";
	mes "........It was your choice and my ability, no regret.";
	close;

S_RefineValidate:
	.@weapon_lvl = getarg(0);
	.@item_req = getarg(1);
	.@price = getarg(2);
	.@part = getarg(3);
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);

	// If the VIP system is enabled, the prices for non-VIP players are considerably higher.
	if (VIP_SCRIPT && !vip_status(VIP_STATUS_ACTIVE)) {
		switch(.@weapon_lvl){
			case 0: set .@price, .@price * 10; break;
			case 1: set .@price, .@price * 40; break;
			case 2: set .@price, .@price * 50; break;
			case 3: set .@price, .@price * 2; break;
			case 4: set .@price, .@price * 2; break;
		}
	}

	mes "[Suhnbi]";
	if (.@weapon_lvl)
		mes "You want to refine a level "+ .@weapon_lvl +" weapon?";
	mes "To refine that, you'll need to have one ^ff9999"+ getitemname(.@item_req) +"^000000 and "+ .@price +" zeny.";
	mes "Would you like to continue?";
	next;
	if(select("Yes:No") == 1) {
		if (getequippercentrefinery(.@part) < 100) {
			if (.@weapon_lvl) {
				mes "[Suhnbi]";
				mes "Wow!!";
				mes "This weapon probably";
				mes "looks like it's been refined...";
				mes "many times...";
				mes "It may break if";
				mes "you refine it again.";
				next;
				mes "And if it breaks,";
				mes "you can't use it anymore!";
				mes "All the cards in it and the properties ^ff0000will be lost^000000!";
				mes "^ff0000Besides, the equipment will break!^000000";
				mes "Are you sure you still want to continue?";
				next;
				if(select("Yes:No") == 2) {
					mes "[Suhnbi]";
					mes "Good.";
					mes "Because if the weapon breaks from unreasonable refining, then I get a bad mood, too.";
					close;
				}
			} else {
				mes "[Suhnbi]";
				mes "Giggle. Giggle. Oh, you have guts, daring to refine this.";
				mes "You know it's pretty risky, don't you?";
				next;
				mes "If your defensive equipment is broken, you'll never be able to use it again.";
				mes "Even your cards and your modifications will ^ff0000completely disappear^000000.";
				//mes "Everything will disappear. As in... GONE!";
				mes "Do you really wish to continue?";
				next;
				if(select("Yes:No") == 2) {
					mes "[Suhnbi]";
					mes "What nonsense. You waste my precious time.";
					mes "Get lost, punk.";
					close;
				}
			}
		}
		if (countitem(.@item_req) > 0 && Zeny > .@price) {
			delitem .@item_req,1;
			set Zeny, Zeny - .@price;

			// anti-hack
			if (callfunc("F_IsEquipIDHack", .@part, getarg(4)) ||
				callfunc("F_IsEquipRefineHack", .@part, getarg(5)) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3])) {
				mes "[Holink]";
				emotion ET_FRET;
				mes "Wait a second...";
				mes "Do you think I'm stupid?!";
				mes "You switched the item while I wasn't looking! Get out of here!";
				close;
			}

			return;
		}
		mes "[Suhnbi]";
		mes "Are these all you have?";
		mes "I'm very sorry, but I can't do anything without all the materials. Besides, I deserve some payments for my work, don't I?";
		close;
	}
	mes "[Suhnbi]";
	mes "I can't help it even if you're not happy about it...";
	close;
}

//===== rAthena Script ======================================= 
//= HD Refiners
//===== Description: =========================================
//= [Official Conversion]
//= Refiners that use HD ores to refine equipment. Upon
//= failure, the equipment is not destroyed; rather, its
//= refine level decreases by 1. The success rate is identical
//= to that for Enriched ores.
//= - "Blacksmith Mighty Hammer" only refines from +7~9.
//= - "Basta" only refines from +10 and up.
//===== Changelog: ===========================================
//= 1.0 First version. [Euphy]
//= 1.1 Removed re-roll behavior. [Secret]
//============================================================

// Blacksmith Mighty Hammer (+7~9) :: cash_smelting79
//============================================================
-	script	::MightyHammer2	-1,{
	disable_items;
	mes "[Blacksmith Mighty Hammer]";
	mes "Unlike others, I am a blacksmith who refines a very limited number of items.";
	mes "I refine only items that are ^CC0000+7 to +9^000000.";
	next;
	mes "[Blacksmith Mighty Hammer]";
	mes "My specialty is that even if my refining fails, the refine level decreases by 1 without losing the gear. Isn't it great?";
	next;
	mes "[Blacksmith Mighty Hammer]";
	mes "So lets kick this into overdrive, what d' ya say? What item do you want to refine?";
	next;
	setarray .@indices[1], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_L, EQI_HAND_R, EQI_GARMENT, EQI_SHOES, EQI_ACC_L, EQI_ACC_R, EQI_HEAD_MID, EQI_HEAD_LOW;
	for(set .@i,1; .@i<=10; set .@i,.@i+1)
		set .@menu$, .@menu$ + ( getequipisequiped(.@indices[.@i]) ? getequipname(.@indices[.@i]) : F_getpositionname(.@indices[.@i]) +"-[Not equipped]" ) +":";
	set .@part, .@indices[ select(.@menu$) ];
	if (!getequipisequiped(.@part)) {
		mes "[Blacksmith Mighty Hammer]";
		switch(.@part) {
		case 1:
			mes "I'm a blacksmith, not a hairstylist.";
			break;
		case 2:
			mes "With my hammer, I will make you a star of the sky.";
			break;
		case 3:
		case 4:
			mes "Making artificial hands is not my specialty.";
			break;
		case 5:
			mes "Bring out the item so I can refine it!";
			break;
		case 6:
			mes "Where is this foot odor coming from?";
			break;
		case 7:
		case 8:
			mes "Where is the accessory?";
			break;
		case 9:
			mes "What do you want me to refine?";
			break;
		case 10:
			mes "Huh? What do you want me to do?";
			break;
		}
		close;
	}
	if (!getequipisenableref(.@part)) {
		mes "[Blacksmith Mighty Hammer]";
		mes "This item can't be refined.";
		close;
	}
	if (getequiprefinerycnt(.@part) < 7 || getequiprefinerycnt(.@part) > 9) {
		mes "[Blacksmith Mighty Hammer]";
		mes "I only handle items with refine levels from +7 to +9.";
		close;
	}
	
	.@refineitemid = getequipid(.@part); // save id of the item
	.@refinerycnt = getequiprefinerycnt(.@part); //save refinery count
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);
	.@price = getequiprefinecost(.@part, REFINE_COST_HD, REFINE_ZENY_COST);
	.@material = getequiprefinecost(.@part, REFINE_COST_HD, REFINE_MATERIAL_ID);
	
	mes "[Blacksmith Mighty Hammer]";
	mes "In order to refine the gear you selected you need ^ff9999"+getitemname(.@material)+"^000000 and 20,000 zeny as a fee.";
	mes "Do you have them ready?";
	next;
	if(select("Yes:No") == 2) {
		mes "[Blacksmith Mighty Hammer]";
		mes "I will wait until you are ready.";
		close;
	}
	if (getequippercentrefinery(.@part) < 100) {
		mes "[Blacksmith Mighty Hammer]";
		mes "It looks like this item will likely fail to be refined.";
		mes "Well, even if it fails, it only decreases by 1 refine level.";
		mes "Would you like to continue refining?";
		next;
		if(select("Yes:No") == 2) {
			mes "[Blacksmith Mighty Hammer]";
			mes "Only those who overcome fear of failure will obtain a masterpiece.";
			close;
		}
	}
	if (countitem(.@material) == 0 || Zeny < .@price) {
		mes "[Blacksmith Mighty Hammer]";
		mes "Didn't you just say you had everything ready?";
		close;
	}
	delitem .@material,1;
	set Zeny, Zeny-.@price;

	// anti-hack
	if (callfunc("F_IsEquipIDHack", .@part, .@refineitemid) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) ||
		callfunc("F_IsEquipRefineHack", .@part, .@refinerycnt)) {
		mes "[Blacksmith Mighty Hammer]";
		emotion ET_FRET;
		mes "Wait a second...";
		mes "Do you think I'm stupid?!";
		mes "You switched the item while I wasn't looking! Get out of here!";
		close;
	}

	mes "[Blacksmith Mighty Hammer]";
	mes "Tac! Tac! Tac!";
	if (getequippercentrefinery(.@part, true) > rand(100)) {
		successrefitem .@part;
		next;
		emotion ET_BEST;
		mes "[Blacksmith Mighty Hammer]";
		mes "The sound refreshes my mind everytime I hear it.";
		mes "Here, have it. Refine succeeded flawlessly!";
		close;
	}
	downrefitem .@part;
	next;
	emotion ET_HUK;
	mes "[Blacksmith Mighty Hammer]";
	mes "Oops!!";
	next;
	mes "[Blacksmith Mighty Hammer]";
	mes "I am sure a person like you would never blame me for a decrease in refine level by 1. Hmm.";
	close;
}
pa2_in01,79,32,5	duplicate(MightyHammer)	HD Refiner +10#pa2	826


// Basta (+10 and up) :: cash_smelting
//============================================================
-	script	::Basta2	-1,{
	disable_items;
	mes "[Basta]";
	mes "I'm the best Blacksmith in the whole world, Basta.";
	mes "But I don't provide a normal refine service.";
	mes "I only refine equipment ^CC0000over +10^000000.";
	next;
	mes "[Basta]";
	mes "Which equipment do you want to refine?";
	next;
	setarray .@indices[1], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_L, EQI_HAND_R, EQI_GARMENT, EQI_SHOES, EQI_ACC_L, EQI_ACC_R, EQI_HEAD_MID, EQI_HEAD_LOW;
	for(set .@i,1; .@i<=10; set .@i,.@i+1)
		set .@menu$, .@menu$ + ( getequipisequiped(.@indices[.@i]) ? getequipname(.@indices[.@i]) : F_getpositionname(.@indices[.@i]) +"-[Unequipped]" ) +":";
	set .@part, .@indices[ select(.@menu$) ];
	if (!getequipisequiped(.@part)) {
		mes "[Basta]";
		switch(.@part) {
		case 1:
			mes "Is your head an equipment?";
			break;
		case 2:
			mes "What do you want me to do?";
			break;
		case 3:
		case 4:
			mes "Making artificial hands is not my specialty.";
			break;
		case 5:
			mes "Do you even know what a robe is?";
			break;
		case 6:
			mes "If you want to refine your feet, don't come to me, try running a marathon.";
			break;
		case 7:
		case 8:
			mes "Where is the accessory?";
			break;
		case 9:
			mes "Well... I don't see any equipment worth refining.";
			break;
		case 10:
			mes "I can't make you smart. Go see a school teacher for that.";
			break;
		}
		close;
	}
	if (!getequipisenableref(.@part)) {
		mes "[Basta]";
		mes "Even I cannot refine this item. There's no way.";
		close;
	}
	if (getequiprefinerycnt(.@part) < 10) {
		mes "[Basta]";
		mes "Haven't I told you? I only refine equipments that are +10 and above.";
		close;
	}
	if (getequiprefinerycnt(.@part) == 20) {
		mes "[Basta]";
		mes "This weapon is perfect, no need to refine it anymore~";
		close;
	}
	.@refineitemid = getequipid(.@part); // save id of the item
	.@refinerycnt = getequiprefinerycnt(.@part); //save refinery count
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);
	.@price = getequiprefinecost(.@part, REFINE_COST_OVER10_HD, REFINE_ZENY_COST);
	.@material = getequiprefinecost(.@part, REFINE_COST_OVER10_HD, REFINE_MATERIAL_ID);
	switch(getequipweaponlv(.@part)) {
	default:
	case 0:
		set .@type$,"armor";
		break;
	case 1:
	case 2:
	case 3:
	case 4:
		set .@type$,"weapon";
		break;
	}
	mes "[Basta]";
	mes "Hmm... is this the one you want to refine?";
	mes "To refine this equipment, I need 1 ^ff9999"+getitemname(.@material)+"^000000 and " + callfunc("F_InsertComma",.@price) + " zeny as a fee.";
	mes "Do you really want to refine this?";
	next;
	if(select("Yes:No") == 2) {
		mes "[Basta]";
		mes "Okay. If that's what you want...";
		close;
	}
	if (getequippercentrefinery(.@part, true) < 100) {
		mes "[Basta]";
		mes "This "+.@type$+" has already been refined pretty high.";
		mes "If you try to refine it more, the refine level could decrease.";
		next;
		mes "[Basta]";
		mes "I am different from the blacksmiths in others places.";
		mes "It is impossible that the refine level will drop by, say, 3 or 4... that sounds scary.";
		mes "Here it can only decrease by 1 level.";
		next;
		mes "[Basta]";
		mes "Compared to other blacksmiths, the risk is smaller.";
		mes "I've given all precautions. Do you want to try it?";
		next;
		if(select("Yes:No") == 2) {
			mes "[Basta]";
			mes "Well~";
			mes "Not challenging at all could also be a kind of wisdom in life.";
			close;
		}
	}
	if (countitem(.@material) == 0 || Zeny < .@price) {
		mes "[Basta]";
		mes "Hmm... You didn't bring all the materials needed.";
		mes "Come back when you have them all.";
		close;
	}
	delitem .@material,1;
	set Zeny, Zeny-.@price;

	// anti-hack
	if (callfunc("F_IsEquipIDHack", .@part, .@refineitemid) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) ||
		callfunc("F_IsEquipRefineHack", .@part, .@refinerycnt)) {
		mes "[Basta]";
		emotion ET_FRET;
		mes "Wait a second...";
		mes "Do you think I'm stupid?!";
		mes "You switched the item while I wasn't looking! Get out of here!";
		close;
	}

	mes "Pow! Pow! Pow! Pow!";
	if (getequippercentrefinery(.@part, true) > rand(100)) {
		successrefitem .@part;
		next;
		emotion ET_BEST;
		mes "[Basta]";
		mes "Great! Nicely done!!";
		mes "I really am the best blacksmith in the whole wide world!";
		close;
	}
	downrefitem .@part;
	next;
	emotion (!rand(5))?ET_MONEY:ET_HUK;
	mes "[Basta]";
	mes "Aaaaaaaaaaak!!!";
	next;
	mes "[Basta]";
	mes "Damn it!";
	mes "Refining failed and refine level has decreased!";
	mes "Even the best blacksmith in the world doesn't guarantee 100% success!";
	mes "Too bad.";
	next;
	mes "[Basta]";
	mes "I'll do better next time! Don't worry!";
	close;
}
pa2_in01,77,32,5	duplicate(Basta)	HD Refiner +20#pa2	826

//===== rAthena Script ======================================= 
//= Blessed Refiner
//===== Description: =========================================
//= [Official Conversion]
//= Refiners that use Blessed ores to refine equipment.
//= Upon failure, the equipment is not destroyed. The success
//= rate is identical to that for Enriched ores.
//= - "Blacksmith Dister" only refines from +6~12.
//= NOTE: This NPC is currently disabled on official servers.
//===== Changelog: ===========================================
//= 1.0 First version. [Euphy]
//= 1.1 Removed re-roll behavior. [Secret]
//============================================================

// Main NPC :: new_smelting612
//============================================================
-	script	::BlacksmithDister	-1,{
	disable_items;
	mes "[Blacksmith Dister]";
	mes "In this highly competitive society, we must be different in order to survive!";
	mes "I only refine equipment at the +6 ~ 12 levels.";
	next;
	mes "[Blacksmith Dister]";
	mes "I will need ^ff9999Blessed Weapon Ore^000000 for weapons, and ^ff9999Blessed Armor Ore^000000 for armors.";
	mes "Failed refines ^FF0000will not break or reduce the refine level^000000.";
	next;
	mes "[Blacksmith Dister]";
	mes "How about it? Do you want to refine?";
	next;
	setarray .@indices[1], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_L, EQI_HAND_R, EQI_GARMENT, EQI_SHOES, EQI_ACC_L, EQI_ACC_R, EQI_HEAD_MID, EQI_HEAD_LOW;
	for(set .@i,1; .@i<=10; set .@i,.@i+1)
		set .@menu$, .@menu$ + ( getequipisequiped(.@indices[.@i]) ? getequipname(.@indices[.@i]) : F_getpositionname(.@indices[.@i]) +"-[Unequipped]" ) +":";
	set .@part, .@indices[ select(.@menu$) ];
	if (!getequipisequiped(.@part)) {
		mes "[Blacksmith Dister]";
		switch(.@part) {
		case 1:
			mes "I'm a blacksmith, not a hairstylist.";
			break;
		case 2:
			mes "With my hammer, I will make you a star of the sky.";
			break;
		case 3:
		case 4:
			mes "Making artificial hands is not my specialty.";
			break;
		case 5:
			mes "Bring out the item so I can refine it!";
			break;
		case 6:
			mes "Where is this weird smell coming from?";
			break;
		case 7:
		case 8:
			mes "Where is the accessory?";
			break;
		case 9:
			mes "What do you want me to refine?";
			break;
		case 10:
			mes "Huh? What do you want me to do?";
			break;
		}
		close;
	}
	if (!getequipisenableref(.@part)) {
		mes "[Blacksmith Dister]";
		mes "This item cannot be refined.";
		close;
	}
	.@equip_id = getequipid(.@part);
	.@equip_refine = getequiprefinerycnt(.@part);
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);

	if (.@equip_refine < 6 || .@equip_refine > 12) {
		mes "[Blacksmith Dister]";
		mes "This equipment has refined to "+.@equip_refine+". I only handle items with refine levels from +6 to +12!";
		close;
	}
	set .@equip_lv, getequipweaponlv(.@part);
	switch(.@equip_lv) {
	default:
	case 0:
		set .@price,20000;
		set .@material,6439; //Unbreakable_Def
		set .@type$,"Armor";
		break;
	case 1:
		set .@price,1000;
		set .@material,6438; //Unbreakable_Weap
		set .@type$,"Weapon";
		break;
	case 2:
		set .@price,2000;
		set .@material,6438; //Unbreakable_Weap
		set .@type$,"Weapon";
		break;
	case 3:
		set .@price,20000;
		set .@material,6438; //Unbreakable_Weap
		set .@type$,"Weapon";
		break;
	case 4:
		set .@price,40000;
		set .@material,6438; //Unbreakable_Weap
		set .@type$,"Weapon";
		break;
	}
	set .@ore$,"^ff9999Blessed "+.@type$+" Ore^000000";
	mes "[Blacksmith Dister]";
	mes "This "+.@type$+" has been refined to "+.@equip_refine+". To refine it, I need "+.@ore$+" and a "+callfunc("F_InsertComma",.@price)+" zeny refining fee.";
	mes "Do you want to proceed?";
	next;
	if(select("Yes:No") == 2) {
		mes "[Blacksmith Dister]";
		mes "I am busy, don't joke with me!";
		close;
	}
	if (getequippercentrefinery(.@part) < 100) {
		mes "[Blacksmith Dister]";
		mes "This "+.@type$+" has been refined many times. Although it will not disappear upon failure, the "+.@ore$+" will disappear!";
		next;
		mes "[Blacksmith Dister]";
		mes "Of course, the refining fee will not be returned! Do you want to continue?";
		next;
		if(select("Yes:No") == 2) {
			mes "[Blacksmith Dister]";
			mes "Good. I'd be sad if it failed, too.";
			close;
		}
	}
	if (countitem(.@material) == 0 || Zeny < .@price) {
		mes "[Blacksmith Dister]";
		mes "Materials insufficient.";
		mes "To refine "+((.@equip_lv)?"a level "+.@equip_lv+" weapon":"armor")+", I need "+.@ore$+" and a "+callfunc("F_InsertComma",.@price)+" zeny refining fee.";
		close;
	}
	delitem .@material,1;
	set Zeny, Zeny-.@price;

	// anti-hack
	if (callfunc("F_IsEquipIDHack", .@part, .@equip_id) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) || callfunc("F_IsEquipRefineHack", .@part, .@equip_refine))
		close;

	mes "[Blacksmith Dister]";
	mes "Tac! Tac! Tac!";
	if (getequippercentrefinery(.@part, true) > rand(100)) {
		specialeffect EF_BLESSING;
		successrefitem .@part;
		next;
		mes "[Blacksmith Dister]";
		mes "Hahahahahaha!!!";
		next;
		mes "[Blacksmith Dister]";
		mes "Refine was a huge success~ Hahaha!";
		close;
	}
	specialeffect EF_CURSEATTACK;
	specialeffect2 EF_SUI_EXPLOSION;
	next;
	emotion (!rand(5))?ET_ANGER:ET_HUK;
	mes "[Blacksmith Dister]";
	mes "Oh my goodness!!!!";
	next;
	mes "[Blacksmith Dister]";
	mes "Oh! Although it was blessed by "+.@ore$+" to retain the equipment...";
	next;
	mes "[Blacksmith Dister]";
	mes "My mood is worse when I fail!!";
	close;
}
pa2_in01,77,30,5	duplicate(BlacksmithDister)	Blessed Refiner#pa2	826