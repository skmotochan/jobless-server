//===== rAthena Script =======================================
//= Episode 11.1 Socket Enchant NPC
//===== By: ==================================================
//= rAthena Dev Team
//===== Current Version: =====================================
//= 2.0a
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Adds slots to selected weapons and armor.
//===== Additional Comments: =================================
//= 0.1a added missing L_No: to 2 funcs [Lupus]
//= 0.1b Removed duplicates [Toms]
//= 0.2 Added missing next;'s [Evera]
//= 0.3 Fixed Zweihander[+] id [Lupus]
//= 1.0 Fixed ingredients check [Lupus]
//= 1.1 Updated to official. [SinSloth]
//= 1.1b Optimized/cleaned [ultramage]
//= 1.2 Fixed some typos and a nasty bug. [SinSloth]
//= 1.3 Fixed a wrong item ID with Sphinx Hat. [SinSloth]
//= 1.4 Corrected NPC names to fall within proper restrictions. [L0ne_W0lf]
//= 1.5 Removed Ontouch trigger area from NPCs. [L0ne_W0lf]
//= 1.6 Replaced effect numerics with constants. [Samuray22]
//= 1.7 Adjusted prices on some armor and weapons. [L0ne_W0lf]
//= 1.8 Added missing Gae Bolg and Dragon Slayer. [Kisuka]
//= 1.9 Moved Episode 12 items to separate NPC.
//=     Some cleanup & optimization. [Gepard]
//= 2.0 Duplicates now spawn from floating NPCs. [L0ne_W0lf]
//= 2.0a Added 'disable_items' command. [Euphy]
//============================================================

-	script	Seiyablem#dummy::SocketEnchant3	-1,{
	if (checkweight(1201,1) == 0)
	{
		mes "- Wait a minute !! -";
		mes "- Currently you're carrying -";
		mes "- too many items with you. -";
		mes "- Please try again -";
		mes "- after you lose some weight. -";
		close;
	}
	mes "[Seiyablem]";
	mes "I'm an engineer that specializes in adding Slots to normal Weapons and Armor.";
	mes "My service fee, the required materials and the chance of success all depend on the specific item I'm working on.";
	next;
	mes "[Seiyablem]";
	mes "Adding Slots may seem simple, but it's far more complicated than it looks.";
	mes "If you're interested in my service, let me know.";
	next;
	switch(select("Add Slot to Weapon:Add Slot to Armor:Slot Attempt Info:Cancel"))
	{
		case 1:
			mes "[Seiyablem]";
			mes "You want to add a Slot to a weapon?";
			mes "I categorize weapons by their difficulty in adding a Slot, C Class being easiest and S Class the most difficult.";
			mes "Which class would you like to try?";
			next;
			switch(select("C Class:B Class:A Class:S Class"))
			{
				case 1:
					mes "[Seiyablem]";
					mes "C Class, eh?";
					mes "Now, I can only upgrade certain equipment in that class, so please choose one of the following items, so we can try to add a Slot to it.";
					next;
					switch(select("Trident:Rope:Violin"))
					{
						case 1: callfunc "Func_Socket",1460,1461,40,66,200,1010,10;
						case 2: callfunc "Func_Socket",1950,1951,40,66,200,1010,10;
						case 3: callfunc "Func_Socket",1901,1902,40,66,200,1010,10;
					}
				case 2:
					mes "[Seiyablem]";
					mes "B Class?";
					mes "Alright, this is the average equipment category.";
					mes "Please choose the weapon to which you'd like me to try to add a Slot.";
					next;
					switch(select("Chain:Gladius:Gakkung Bow:Pike:Haedonggum:Lute:Wire:Waghnakh:Arbalest Bow"))
					{
						case 1: callfunc "Func_Socket",1519,1520,40,61,300,1010,10;
						case 2: callfunc "Func_Socket",1219,1220,40,61,300, 984, 1,999,5;
						case 3: callfunc "Func_Socket",1714,1716,40,61,300, 984, 2,999,5;
						case 4: callfunc "Func_Socket",1407,1408,40,61,200,1010,10;
						case 5: callfunc "Func_Socket",1123,1128,40,61,300, 984, 2,999,5;
						case 6: callfunc "Func_Socket",1905,1906,40,61,300,1011,10;
						case 7: callfunc "Func_Socket",1954,1955,40,61,300,1011,10;
						case 8: callfunc "Func_Socket",1801,1802,40,61,300,1010,10;
						case 9: callfunc "Func_Socket",1713,1715,40,61,300, 984, 2,999,5;
					}
				case 3:
					mes "[Seiyablem]";
					mes "Ooh, A Class.";
					mes "This is some high risk territory!";
					mes "Alright, which weapon would you like me to try adding a Slot?";
					next;
					switch(select("Hunter Bow:Survivor's Rod(INT):Zweihander:Flamberge:Infiltrator:Ballista:Stunner:Berserk:Claymore"))
					{
						case 1: callfunc "Func_Socket",1718,1726,40,61,500,984,2,999,10;
						case 2: callfunc "Func_Socket",1619,1620,40,61,500,984,5,999,10;
						case 3: callfunc "Func_Socket",1168,1171,40,61,800,984,5,999,10;
						case 4: callfunc "Func_Socket",1129,1149,40,61,500,984,2,999,10;
						case 5: callfunc "Func_Socket",1261,1266,40,61,700,984,5,999,10;
						case 6: callfunc "Func_Socket",1722,1727,40,61,500,984,5,999,10;
						case 7: callfunc "Func_Socket",1522,1532,40,61,500,984,2,999,10;
						case 8: callfunc "Func_Socket",1814,1816,40,61,500,984,5,999,10;
						case 9: callfunc "Func_Socket",1163,1172,40,61,500,984,2,999,10; // NPC says "5 Oridecon" (Aegis) but takes only 2
					}
				case 4:
					mes "[Seiyablem]";
					mes "Whoa, whoa, whoa...";
					mes "S class? Alright...";
					mes "It'd be a near miracle if I can actually pull this off.";
					mes "Okay... Which weapon shall we try adding a Slot to?";
					next;
					switch(select("Gungnir:Poison Knife:Ice Pick:Sucsamad:Ginnungagap:Cutlas:Crescent Scythe:Survivor's Rod(DEX)"))
					{
						case 1: callfunc "Func_Socket", 1413, 1418,40,51,1000,984,5,999,10;
						case 2: callfunc "Func_Socket", 1239,13016,40,51,1000,984,5,999,10;
						case 3: callfunc "Func_Socket", 1230,13017,40,51,2000,984,5,999,10;
						case 4: callfunc "Func_Socket", 1236,13018,40,51,1000,984,5,999,10;
						case 5: callfunc "Func_Socket",13002,13019,40,51,1000,984,5,999,10;
						case 6: callfunc "Func_Socket", 1135,13400,40,51,1000,984,5,999,10;
						case 7: callfunc "Func_Socket", 1466, 1476,40,51,1000,984,5,999,10;
						case 8: callfunc "Func_Socket", 1617, 1618,40,51,2000,984,5,999,10;
					}
			}
		case 2:
			mes "[Seiyablem]";
			mes "Armor, you said?";
			mes "Sure, no problem.";
			mes "Armor is divided into 4 different classes, depending on the work difficulty.";
			mes "C Class is the easiest one, and S Class he hardest one.";
			mes "Which class would you like to try?";
			next;
			switch(select("C Class:B Class:A Class:S Class"))
			{
				case 1:
					mes "[Seiyablem]";
					mes "C Class Armor, eh?";
					mes "Sounds reasonable.";
					mes "Which armor would you like to try adding a Slot?";
					next;
					switch(select("Mantle:Coat:Circlet:Biretta"))
					{
						case 1: callfunc "Func_Socket",2307,2308,15,66,200,999,3;
						case 2: callfunc "Func_Socket",2309,2310,15,66,200,999,3;
						case 3: callfunc "Func_Socket",2232,2233,15,66,200,999,3;
						case 4: callfunc "Func_Socket",2216,2217,15,66,200,999,3;
					}
				case 2:
					mes "[Seiyablem]";
					mes "You have chosen average B Class.";
					mes "So, what kind of armor do you have?";
					next;
					switch(select("Mirror Shield:Chain Mail:Saint Robe:Silk Robe:Boots:Shoes:Muffler:Guard:Buckler:Shield:Bongun Hat"))
					{
						case 1:  callfunc "Func_Socket",2107,2108,20,61,250,999,5;
						case 2:  callfunc "Func_Socket",2314,2315,20,61,250,999,5;
						case 3:  callfunc "Func_Socket",2325,2326,20,61,300,999,5;
						case 4:  callfunc "Func_Socket",2321,2322,20,61,300,999,5;
						case 5:  callfunc "Func_Socket",2405,2406,20,61,300,999,5;
						case 6:  callfunc "Func_Socket",2403,2404,20,61,300,999,5;
						case 7:  callfunc "Func_Socket",2503,2504,20,61,300,999,5;
						case 8:  callfunc "Func_Socket",2101,2102,20,61,300,999,5;
						case 9:  callfunc "Func_Socket",2103,2104,20,61,300,999,5;
						case 10: callfunc "Func_Socket",2105,2106,20,61,250,999,5;
						case 11: callfunc "Func_Socket",5046,5168,20,61,250,999,5;
					}
				case 3:
					mes "[Seiyablem]";
					mes "Ooh, A Class.";
					mes "This is some high risk territory!";
					mes "Alright, which armor would you like me to try adding a Slot?";
					next;
					switch(select("Gemmed Sallet:Bucket Hat:Memory Book:Tights:Legion Plate Armor:Full Plate:Thief Clothes:Greaves:Coif:Manteau:Helm:Ninja Suit:Orc Helm:Ancient Cape:Monk Hat:Golden Gear:Brooch:Munak Hat"))
					{
						case 1:  callfunc "Func_Socket",2230,2231,20,61,400,985,1;
						case 2:  callfunc "Func_Socket",5114,5120,20,61,400,985,1;
						case 3:  callfunc "Func_Socket",2109,2121,20,61,400,985,1;
						case 4:  callfunc "Func_Socket",2330,2331,20,61,400,985,1;
						case 5:  callfunc "Func_Socket",2341,2342,20,61,400,985,1;
						case 6:  callfunc "Func_Socket",2316,2317,20,61,400,985,1;
						case 7:  callfunc "Func_Socket",2335,2336,20,61,400,985,1;
						case 8:  callfunc "Func_Socket",2411,2412,20,61,400,985,1;
						case 9:  callfunc "Func_Socket",5092,5093,20,61,400,985,1;
						case 10: callfunc "Func_Socket",2505,2506,20,61,400,985,1;
						case 11: callfunc "Func_Socket",2228,2229,20,61,400,985,1;
						case 12: callfunc "Func_Socket",2337,2359,20,61,400,985,1;
						case 13: callfunc "Func_Socket",2299,5157,20,61,400,985,1;
						case 14: callfunc "Func_Socket",2507,2525,20,61,400,985,1;
						case 15: callfunc "Func_Socket",2251,5158,20,61,400,985,1;
						case 16: callfunc "Func_Socket",2246,5159,20,61,400,985,1;
						case 17: callfunc "Func_Socket",2605,2625,20,61,400,985,1;
						case 18: callfunc "Func_Socket",2264,5167,20,61,300,985,1;
					}
				case 4:
					mes "[Seiyablem]";
					mes "Um... S Class?";
					mes "You sure about this?";
					mes "Alright... Let me know the Armor to which you'd like to add a Slot, and I'll tell what I need to try it.";
					next;
					switch(select("Majestic Goat:Spiky Band:Bone Helm:Corsair:Crown:Tiara:Sphinx Hat:Robe of Cast:Earring:Ring:Bow Thimble"))
					{
						case 1:  callfunc "Func_Socket",2256,5160,30,51,2000,985,2;
						case 2:  callfunc "Func_Socket",2258,5161,30,51,2000,985,2;
						case 3:  callfunc "Func_Socket",5017,5162,30,51,2000,985,2;
						case 4:  callfunc "Func_Socket",5019,5163,30,51,2000,985,2;
						case 5:  callfunc "Func_Socket",2235,5165,30,51,2000,985,2;
						case 6:  callfunc "Func_Socket",2234,5164,30,51,2000,985,2;
						case 7:  callfunc "Func_Socket",5053,5166,30,51,1000,985,2;
						case 8:  callfunc "Func_Socket",2343,2360,30,51,1000,985,2;
						case 9:  callfunc "Func_Socket",2602,2622,30,51,1000,985,2;
						case 10: callfunc "Func_Socket",2601,2621,30,51,1000,985,2;
						case 11: callfunc "Func_Socket",2619,2671,30,51,1000,985,2;
					}
			}
		case 3:
			mes "[Seiyablem]";
			mes "Well, I haven't really refined the art of Slot Addition.";
			mes "It's so complicated that I'd be lying if I told you that I knew every factor that affected the process.";
			mes "Still, I do notice a few trends...";
			next;
			mes "[Seiyablem]";
			mes "In some towns, Slot addition attempts are more successful for equipment with fewer upgrades.";
			mes "In other towns, the opposite is true.";
			mes "isn't that really peculiar?";
			next;
			mes "[Seiyablem]";
			mes "Oh, there's also something really important that you should know.";
			mes "If you ask me to add a Slot to something, make sure that you don't have multiples of it in your inventory.";
			next;
			mes "[Seiyablem]";
			mes "Here's an example: if you have a +7 Manteau and a normal Manteau in your inventory, then I will randomly pick one of them for my Slot Addition attempt.";
			mes "Just remember to be careful.";
			next;
			mes "[Seiyablem]";
			mes "Again, ^FF0000only carry one of the equipment to which you want me to add a Slot^000000.";
			mes "All other equipment with the same name should be placed in your Kafra Storage, got it?";
			close;
		case 4:
			mes "[Seiyablem]";
			mes "Take it easy, adventurer.";
			mes "If you ever want to try adding a Slot to some of your equipment, come back and let me know.";
			mes "Seeya~";
			close;
	}
}

pa2_in01,77,21,7	duplicate(SocketEnchant)	Socket Enchant 1#pa2	84